let
    var total := 0
    var failed := 0

    function assertInt(name: string, expected: int, actual: int) =
        (total := total +1;
        if actual != expected then
            (failed := failed + 1;
             print(name); print(": FAILED: expected "); printi(expected); print(", but got "); printi(actual); print("\n")))
in
    assertInt("4 = 4",  1, 4 = 4);
    assertInt("4 != 4", 0, 4 != 4);
    assertInt("4 < 4",  0, 4 < 4);
    assertInt("4 <= ",  1, 4 <= 4);
    assertInt("4 > 4",  0, 4 > 4);
    assertInt("4 >= 4", 1, 4 >= 4);

    assertInt("3 = 4",  0, 3 = 4);
    assertInt("3 != 4", 1, 3 != 4);
    assertInt("3 < 4",  1, 3 < 4);
    assertInt("4 <= 4", 1, 3 <= 4);
    assertInt("3 > 4",  0, 3 > 4);
    assertInt("3 >= 4", 0, 3 >= 4);

    assertInt("4 = 3",  0, 4 = 3);
    assertInt("4 != 3", 1, 4 != 3);
    assertInt("4 < 3",  0, 4 < 3);
    assertInt("4 <= 3", 0, 4 <= 3);
    assertInt("4 > 3",  1, 4 > 3);
    assertInt("4 >= 3", 1, 4 >= 3);

    if failed = 0 then
        (print("all "); printi(total); print(" tests passed!\n"))
    else
        (printi(failed); print("/"); printi(total); print(" tests failed!\n"); exit(1))
end

